// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 1)]
    public unsafe partial struct PxShapeExt
    {
        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getGlobalPose@PxShapeExt@physx@@SA?AVPxTransform@2@AEBVPxShape@2@AEBVPxRigidActor@2@@Z", ExactSpelling = true)]
        private static extern PxTransform* getGlobalPose_PInvoke(out PxTransform __returnBuffer, PxShape* shape, PxRigidActor* actor);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxTransform getGlobalPose(PxShape* shape, PxRigidActor* actor)
        {
            PxTransform __returnBuffer;
            getGlobalPose_PInvoke(out __returnBuffer, shape, actor);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?raycast@PxShapeExt@physx@@SAIAEBVPxShape@2@AEBVPxRigidActor@2@AEBVPxVec3@2@2MV?$PxFlags@W4Enum@PxHitFlag@physx@@G@2@IPEAUPxRaycastHit@2@@Z", ExactSpelling = true)]
        public static extern uint raycast(PxShape* shape, PxRigidActor* actor, PxVec3* rayOrigin, PxVec3* rayDir, float maxDist, PxHitFlags* hitFlags, uint maxHits, PxRaycastHit* rayHits);

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?overlap@PxShapeExt@physx@@SA_NAEBVPxShape@2@AEBVPxRigidActor@2@AEBVPxGeometry@2@AEBVPxTransform@2@@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool overlap(PxShape* shape, PxRigidActor* actor, PxGeometry* otherGeom, PxTransform* otherGeomPose);

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?sweep@PxShapeExt@physx@@SA_NAEBVPxShape@2@AEBVPxRigidActor@2@AEBVPxVec3@2@MAEBVPxGeometry@2@AEBVPxTransform@2@AEAUPxSweepHit@2@V?$PxFlags@W4Enum@PxHitFlag@physx@@G@2@@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        public static extern bool sweep(PxShape* shape, PxRigidActor* actor, PxVec3* unitDir, float distance, PxGeometry* otherGeom, PxTransform* otherGeomPose, PxSweepHit* sweepHit, PxHitFlags* hitFlags);

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getWorldBounds@PxShapeExt@physx@@SA?AVPxBounds3@2@AEBVPxShape@2@AEBVPxRigidActor@2@M@Z", ExactSpelling = true)]
        private static extern PxBounds3* getWorldBounds_PInvoke(out PxBounds3 __returnBuffer, PxShape* shape, PxRigidActor* actor, float inflation = 1.00999999f);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 getWorldBounds(PxShape* shape, PxRigidActor* actor, float inflation = 1.00999999f)
        {
            PxBounds3 __returnBuffer;
            getWorldBounds_PInvoke(out __returnBuffer, shape, actor, inflation);
            return __returnBuffer;
        }
    }
}
