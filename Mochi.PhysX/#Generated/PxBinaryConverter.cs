// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public unsafe partial struct PxBinaryConverter
    {
        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void release()
        {
            fixed (PxBinaryConverter* @this = &this)
            { VirtualMethodTablePointer->release(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setReportMode(PxConverterReportMode mode)
        {
            fixed (PxBinaryConverter* @this = &this)
            { VirtualMethodTablePointer->setReportMode(@this, mode); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool setMetaData(PxInputStream* srcMetaData, PxInputStream* dstMetaData)
        {
            fixed (PxBinaryConverter* @this = &this)
            { return VirtualMethodTablePointer->setMetaData(@this, srcMetaData, dstMetaData); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool compareMetaData()
        {
            fixed (PxBinaryConverter* @this = &this)
            { return VirtualMethodTablePointer->compareMetaData(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool convert(PxInputStream* srcStream, uint srcSize, PxOutputStream* targetStream)
        {
            fixed (PxBinaryConverter* @this = &this)
            { return VirtualMethodTablePointer->convert(@this, srcStream, srcSize, targetStream); }
        }

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `release`</summary>
            public delegate* unmanaged[Cdecl]<PxBinaryConverter*, void> release;
            /// <summary>Virtual method pointer for `setReportMode`</summary>
            public delegate* unmanaged[Cdecl]<PxBinaryConverter*, PxConverterReportMode, void> setReportMode;
            /// <summary>Virtual method pointer for `setMetaData`</summary>
            public delegate* unmanaged[Cdecl]<PxBinaryConverter*, PxInputStream*, PxInputStream*, NativeBoolean> setMetaData;
            /// <summary>Virtual method pointer for `compareMetaData`</summary>
            public delegate* unmanaged[Cdecl]<PxBinaryConverter*, NativeBoolean> compareMetaData;
            /// <summary>Virtual method pointer for `convert`</summary>
            public delegate* unmanaged[Cdecl]<PxBinaryConverter*, PxInputStream*, uint, PxOutputStream*, NativeBoolean> convert;
            /// <summary>Virtual method pointer for `~PxBinaryConverter`</summary>
            public void* __DeletingDestructorPointer;
        }
    }
}
