// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public unsafe partial struct PxDefaultCpuDispatcher
    {
        [FieldOffset(0)] public PxCpuDispatcher Base;

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void release()
        {
            fixed (PxDefaultCpuDispatcher* @this = &this)
            { VirtualMethodTablePointer->release(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setRunProfiled(bool runProfiled)
        {
            fixed (PxDefaultCpuDispatcher* @this = &this)
            { VirtualMethodTablePointer->setRunProfiled(@this, runProfiled); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool getRunProfiled()
        {
            fixed (PxDefaultCpuDispatcher* @this = &this)
            { return VirtualMethodTablePointer->getRunProfiled(@this); }
        }

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `submitTask`</summary>
            public delegate* unmanaged[Cdecl]<PxDefaultCpuDispatcher*, PxBaseTask*, void> submitTask;
            /// <summary>Virtual method pointer for `getWorkerCount`</summary>
            public delegate* unmanaged[Cdecl]<PxDefaultCpuDispatcher*, uint> getWorkerCount;
            /// <summary>Virtual method pointer for `~PxDefaultCpuDispatcher`</summary>
            public void* __DeletingDestructorPointer;
            /// <summary>Virtual method pointer for `release`</summary>
            public delegate* unmanaged[Cdecl]<PxDefaultCpuDispatcher*, void> release;
            /// <summary>Virtual method pointer for `setRunProfiled`</summary>
            public delegate* unmanaged[Cdecl]<PxDefaultCpuDispatcher*, NativeBoolean, void> setRunProfiled;
            /// <summary>Virtual method pointer for `getRunProfiled`</summary>
            public delegate* unmanaged[Cdecl]<PxDefaultCpuDispatcher*, NativeBoolean> getRunProfiled;
        }
    }
}
