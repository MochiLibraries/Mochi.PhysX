// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 24)]
    public unsafe partial struct PxBounds3
    {
        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper41", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxBounds3* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxBounds3()
        {
            fixed (PxBounds3* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper42", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxBounds3* @this, PxVec3* minimum, PxVec3* maximum);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxBounds3(PxVec3* minimum, PxVec3* maximum)
        {
            fixed (PxBounds3* @this = &this)
            { Constructor_PInvoke(@this, minimum, maximum); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?empty@PxBounds3@physx@@SA?AV12@XZ", ExactSpelling = true)]
        private static extern PxBounds3* empty_PInvoke(out PxBounds3 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 empty()
        {
            PxBounds3 __returnBuffer;
            empty_PInvoke(out __returnBuffer);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?boundsOfPoints@PxBounds3@physx@@SA?AV12@AEBVPxVec3@2@0@Z", ExactSpelling = true)]
        private static extern PxBounds3* boundsOfPoints_PInvoke(out PxBounds3 __returnBuffer, PxVec3* v0, PxVec3* v1);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 boundsOfPoints(PxVec3* v0, PxVec3* v1)
        {
            PxBounds3 __returnBuffer;
            boundsOfPoints_PInvoke(out __returnBuffer, v0, v1);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?centerExtents@PxBounds3@physx@@SA?AV12@AEBVPxVec3@2@0@Z", ExactSpelling = true)]
        private static extern PxBounds3* centerExtents_PInvoke(out PxBounds3 __returnBuffer, PxVec3* center, PxVec3* extent);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 centerExtents(PxVec3* center, PxVec3* extent)
        {
            PxBounds3 __returnBuffer;
            centerExtents_PInvoke(out __returnBuffer, center, extent);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?basisExtent@PxBounds3@physx@@SA?AV12@AEBVPxVec3@2@AEBVPxMat33@2@0@Z", ExactSpelling = true)]
        private static extern PxBounds3* basisExtent_PInvoke(out PxBounds3 __returnBuffer, PxVec3* center, PxMat33* basis, PxVec3* extent);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 basisExtent(PxVec3* center, PxMat33* basis, PxVec3* extent)
        {
            PxBounds3 __returnBuffer;
            basisExtent_PInvoke(out __returnBuffer, center, basis, extent);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?poseExtent@PxBounds3@physx@@SA?AV12@AEBVPxTransform@2@AEBVPxVec3@2@@Z", ExactSpelling = true)]
        private static extern PxBounds3* poseExtent_PInvoke(out PxBounds3 __returnBuffer, PxTransform* pose, PxVec3* extent);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 poseExtent(PxTransform* pose, PxVec3* extent)
        {
            PxBounds3 __returnBuffer;
            poseExtent_PInvoke(out __returnBuffer, pose, extent);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transformSafe@PxBounds3@physx@@SA?AV12@AEBVPxMat33@2@AEBV12@@Z", ExactSpelling = true)]
        private static extern PxBounds3* transformSafe_PInvoke(out PxBounds3 __returnBuffer, PxMat33* matrix, PxBounds3* bounds);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 transformSafe(PxMat33* matrix, PxBounds3* bounds)
        {
            PxBounds3 __returnBuffer;
            transformSafe_PInvoke(out __returnBuffer, matrix, bounds);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transformFast@PxBounds3@physx@@SA?AV12@AEBVPxMat33@2@AEBV12@@Z", ExactSpelling = true)]
        private static extern PxBounds3* transformFast_PInvoke(out PxBounds3 __returnBuffer, PxMat33* matrix, PxBounds3* bounds);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 transformFast(PxMat33* matrix, PxBounds3* bounds)
        {
            PxBounds3 __returnBuffer;
            transformFast_PInvoke(out __returnBuffer, matrix, bounds);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transformSafe@PxBounds3@physx@@SA?AV12@AEBVPxTransform@2@AEBV12@@Z", ExactSpelling = true)]
        private static extern PxBounds3* transformSafe_PInvoke(out PxBounds3 __returnBuffer, PxTransform* transform, PxBounds3* bounds);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 transformSafe(PxTransform* transform, PxBounds3* bounds)
        {
            PxBounds3 __returnBuffer;
            transformSafe_PInvoke(out __returnBuffer, transform, bounds);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transformFast@PxBounds3@physx@@SA?AV12@AEBVPxTransform@2@AEBV12@@Z", ExactSpelling = true)]
        private static extern PxBounds3* transformFast_PInvoke(out PxBounds3 __returnBuffer, PxTransform* transform, PxBounds3* bounds);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static PxBounds3 transformFast(PxTransform* transform, PxBounds3* bounds)
        {
            PxBounds3 __returnBuffer;
            transformFast_PInvoke(out __returnBuffer, transform, bounds);
            return __returnBuffer;
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setEmpty@PxBounds3@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void setEmpty_PInvoke(PxBounds3* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setEmpty()
        {
            fixed (PxBounds3* @this = &this)
            { setEmpty_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setMaximal@PxBounds3@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void setMaximal_PInvoke(PxBounds3* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setMaximal()
        {
            fixed (PxBounds3* @this = &this)
            { setMaximal_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?include@PxBounds3@physx@@QEAAXAEBVPxVec3@2@@Z", ExactSpelling = true)]
        private static extern void include_PInvoke(PxBounds3* @this, PxVec3* v);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void include(PxVec3* v)
        {
            fixed (PxBounds3* @this = &this)
            { include_PInvoke(@this, v); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?include@PxBounds3@physx@@QEAAXAEBV12@@Z", ExactSpelling = true)]
        private static extern void include_PInvoke(PxBounds3* @this, PxBounds3* b);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void include(PxBounds3* b)
        {
            fixed (PxBounds3* @this = &this)
            { include_PInvoke(@this, b); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isEmpty@PxBounds3@physx@@QEBA_NXZ", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool isEmpty_PInvoke(PxBounds3* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool isEmpty()
        {
            fixed (PxBounds3* @this = &this)
            { return isEmpty_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?intersects@PxBounds3@physx@@QEBA_NAEBV12@@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool intersects_PInvoke(PxBounds3* @this, PxBounds3* b);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool intersects(PxBounds3* b)
        {
            fixed (PxBounds3* @this = &this)
            { return intersects_PInvoke(@this, b); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?intersects1D@PxBounds3@physx@@QEBA_NAEBV12@I@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool intersects1D_PInvoke(PxBounds3* @this, PxBounds3* a, uint axis);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool intersects1D(PxBounds3* a, uint axis)
        {
            fixed (PxBounds3* @this = &this)
            { return intersects1D_PInvoke(@this, a, axis); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?contains@PxBounds3@physx@@QEBA_NAEBVPxVec3@2@@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool contains_PInvoke(PxBounds3* @this, PxVec3* v);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool contains(PxVec3* v)
        {
            fixed (PxBounds3* @this = &this)
            { return contains_PInvoke(@this, v); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isInside@PxBounds3@physx@@QEBA_NAEBV12@@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool isInside_PInvoke(PxBounds3* @this, PxBounds3* box);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool isInside(PxBounds3* box)
        {
            fixed (PxBounds3* @this = &this)
            { return isInside_PInvoke(@this, box); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getCenter@PxBounds3@physx@@QEBA?AVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getCenter_PInvoke(PxBounds3* @this, out PxVec3 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3 getCenter()
        {
            fixed (PxBounds3* @this = &this)
            {
                PxVec3 __returnBuffer;
                getCenter_PInvoke(@this, out __returnBuffer);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getCenter@PxBounds3@physx@@QEBAMI@Z", ExactSpelling = true)]
        private static extern float getCenter_PInvoke(PxBounds3* @this, uint axis);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getCenter(uint axis)
        {
            fixed (PxBounds3* @this = &this)
            { return getCenter_PInvoke(@this, axis); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getExtents@PxBounds3@physx@@QEBAMI@Z", ExactSpelling = true)]
        private static extern float getExtents_PInvoke(PxBounds3* @this, uint axis);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getExtents(uint axis)
        {
            fixed (PxBounds3* @this = &this)
            { return getExtents_PInvoke(@this, axis); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getDimensions@PxBounds3@physx@@QEBA?AVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getDimensions_PInvoke(PxBounds3* @this, out PxVec3 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3 getDimensions()
        {
            fixed (PxBounds3* @this = &this)
            {
                PxVec3 __returnBuffer;
                getDimensions_PInvoke(@this, out __returnBuffer);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getExtents@PxBounds3@physx@@QEBA?AVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getExtents_PInvoke(PxBounds3* @this, out PxVec3 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3 getExtents()
        {
            fixed (PxBounds3* @this = &this)
            {
                PxVec3 __returnBuffer;
                getExtents_PInvoke(@this, out __returnBuffer);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?scaleSafe@PxBounds3@physx@@QEAAXM@Z", ExactSpelling = true)]
        private static extern void scaleSafe_PInvoke(PxBounds3* @this, float scale);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void scaleSafe(float scale)
        {
            fixed (PxBounds3* @this = &this)
            { scaleSafe_PInvoke(@this, scale); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?scaleFast@PxBounds3@physx@@QEAAXM@Z", ExactSpelling = true)]
        private static extern void scaleFast_PInvoke(PxBounds3* @this, float scale);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void scaleFast(float scale)
        {
            fixed (PxBounds3* @this = &this)
            { scaleFast_PInvoke(@this, scale); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?fattenSafe@PxBounds3@physx@@QEAAXM@Z", ExactSpelling = true)]
        private static extern void fattenSafe_PInvoke(PxBounds3* @this, float distance);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void fattenSafe(float distance)
        {
            fixed (PxBounds3* @this = &this)
            { fattenSafe_PInvoke(@this, distance); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?fattenFast@PxBounds3@physx@@QEAAXM@Z", ExactSpelling = true)]
        private static extern void fattenFast_PInvoke(PxBounds3* @this, float distance);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void fattenFast(float distance)
        {
            fixed (PxBounds3* @this = &this)
            { fattenFast_PInvoke(@this, distance); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isFinite@PxBounds3@physx@@QEBA_NXZ", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool isFinite_PInvoke(PxBounds3* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool isFinite()
        {
            fixed (PxBounds3* @this = &this)
            { return isFinite_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isValid@PxBounds3@physx@@QEBA_NXZ", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool isValid_PInvoke(PxBounds3* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool isValid()
        {
            fixed (PxBounds3* @this = &this)
            { return isValid_PInvoke(@this); }
        }

        [FieldOffset(0)] public PxVec3 minimum;

        [FieldOffset(12)] public PxVec3 maximum;
    }
}
