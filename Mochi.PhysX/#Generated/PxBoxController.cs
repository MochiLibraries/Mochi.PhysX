// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public unsafe partial struct PxBoxController
    {
        [FieldOffset(0)] public PxController Base;

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getHalfHeight()
        {
            fixed (PxBoxController* @this = &this)
            { return VirtualMethodTablePointer->getHalfHeight(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getHalfSideExtent()
        {
            fixed (PxBoxController* @this = &this)
            { return VirtualMethodTablePointer->getHalfSideExtent(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getHalfForwardExtent()
        {
            fixed (PxBoxController* @this = &this)
            { return VirtualMethodTablePointer->getHalfForwardExtent(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool setHalfHeight(float halfHeight)
        {
            fixed (PxBoxController* @this = &this)
            { return VirtualMethodTablePointer->setHalfHeight(@this, halfHeight); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool setHalfSideExtent(float halfSideExtent)
        {
            fixed (PxBoxController* @this = &this)
            { return VirtualMethodTablePointer->setHalfSideExtent(@this, halfSideExtent); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool setHalfForwardExtent(float halfForwardExtent)
        {
            fixed (PxBoxController* @this = &this)
            { return VirtualMethodTablePointer->setHalfForwardExtent(@this, halfForwardExtent); }
        }

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `getType`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxControllerShapeType> getType;
            /// <summary>Virtual method pointer for `release`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, void> release;
            /// <summary>Virtual method pointer for `move`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxControllerCollisionFlags*, PxVec3*, float, float, PxControllerFilters*, PxObstacleContext*, PxControllerCollisionFlags*> move;
            /// <summary>Virtual method pointer for `setPosition`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxExtendedVec3*, NativeBoolean> setPosition;
            /// <summary>Virtual method pointer for `getPosition`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxExtendedVec3*> getPosition;
            /// <summary>Virtual method pointer for `setFootPosition`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxExtendedVec3*, NativeBoolean> setFootPosition;
            /// <summary>Virtual method pointer for `getFootPosition`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxExtendedVec3*, PxExtendedVec3*> getFootPosition;
            /// <summary>Virtual method pointer for `getActor`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxRigidDynamic*> getActor;
            /// <summary>Virtual method pointer for `setStepOffset`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float, void> setStepOffset;
            /// <summary>Virtual method pointer for `getStepOffset`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float> getStepOffset;
            /// <summary>Virtual method pointer for `setNonWalkableMode`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxControllerNonWalkableMode, void> setNonWalkableMode;
            /// <summary>Virtual method pointer for `getNonWalkableMode`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxControllerNonWalkableMode> getNonWalkableMode;
            /// <summary>Virtual method pointer for `getContactOffset`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float> getContactOffset;
            /// <summary>Virtual method pointer for `setContactOffset`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float, void> setContactOffset;
            /// <summary>Virtual method pointer for `getUpDirection`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxVec3*, PxVec3*> getUpDirection;
            /// <summary>Virtual method pointer for `setUpDirection`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxVec3*, void> setUpDirection;
            /// <summary>Virtual method pointer for `getSlopeLimit`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float> getSlopeLimit;
            /// <summary>Virtual method pointer for `setSlopeLimit`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float, void> setSlopeLimit;
            /// <summary>Virtual method pointer for `invalidateCache`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, void> invalidateCache;
            /// <summary>Virtual method pointer for `getScene`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxScene*> getScene;
            /// <summary>Virtual method pointer for `getUserData`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, void*> getUserData;
            /// <summary>Virtual method pointer for `setUserData`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, void*, void> setUserData;
            /// <summary>Virtual method pointer for `getState`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxControllerState*, void> getState;
            /// <summary>Virtual method pointer for `getStats`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, PxControllerStats*, void> getStats;
            /// <summary>Virtual method pointer for `resize`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float, void> resize;
            /// <summary>Virtual method pointer for `~PxBoxController`</summary>
            public void* __DeletingDestructorPointer;
            /// <summary>Virtual method pointer for `getHalfHeight`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float> getHalfHeight;
            /// <summary>Virtual method pointer for `getHalfSideExtent`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float> getHalfSideExtent;
            /// <summary>Virtual method pointer for `getHalfForwardExtent`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float> getHalfForwardExtent;
            /// <summary>Virtual method pointer for `setHalfHeight`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float, NativeBoolean> setHalfHeight;
            /// <summary>Virtual method pointer for `setHalfSideExtent`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float, NativeBoolean> setHalfSideExtent;
            /// <summary>Virtual method pointer for `setHalfForwardExtent`</summary>
            public delegate* unmanaged[Cdecl]<PxBoxController*, float, NativeBoolean> setHalfForwardExtent;
        }
    }
}
