// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 64)]
    public unsafe partial struct PxMat44
    {
        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper50", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor()
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper51", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxIDENTITY r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxIDENTITY r)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, r); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper52", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxZERO r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxZERO r)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, r); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper53", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxVec4* col0, PxVec4* col1, PxVec4* col2, PxVec4* col3);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxVec4* col0, PxVec4* col1, PxVec4* col2, PxVec4* col3)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, col0, col1, col2, col3); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper54", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, float r);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(float r)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, r); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper55", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxVec3* col0, PxVec3* col1, PxVec3* col2, PxVec3* col3);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxVec3* col0, PxVec3* col1, PxVec3* col2, PxVec3* col3)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, col0, col1, col2, col3); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper56", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, float* values);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(float* values)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, values); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper57", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxQuat* q);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxQuat* q)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, q); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper58", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxVec4* diagonal);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxVec4* diagonal)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, diagonal); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper59", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxMat33* axes, PxVec3* position);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxMat33* axes, PxVec3* position)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, axes, position); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper60", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxTransform* t);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxTransform* t)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, t); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??8PxMat44@physx@@QEBA_NAEBV01@@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool operator_EqualEqual_PInvoke(PxMat44* @this, PxMat44* m);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool operator_EqualEqual(PxMat44* m)
        {
            fixed (PxMat44* @this = &this)
            { return operator_EqualEqual_PInvoke(@this, m); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper61", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxMat44* @this, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            { Constructor_PInvoke(@this, other); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??4PxMat44@physx@@QEAAAEAV01@AEBV01@@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_Equal_PInvoke(PxMat44* @this, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44* operator_Equal(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            { return operator_Equal_PInvoke(@this, other); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getTranspose@PxMat44@physx@@QEBA?BV12@XZ", ExactSpelling = true)]
        private static extern PxMat44* getTranspose_PInvoke(PxMat44* @this, out PxMat44 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44 getTranspose()
        {
            fixed (PxMat44* @this = &this)
            {
                PxMat44 __returnBuffer;
                getTranspose_PInvoke(@this, out __returnBuffer);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??GPxMat44@physx@@QEBA?BV01@XZ", ExactSpelling = true)]
        private static extern PxMat44* operator_Minus_PInvoke(PxMat44* @this, out PxMat44 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44 operator_Minus()
        {
            fixed (PxMat44* @this = &this)
            {
                PxMat44 __returnBuffer;
                operator_Minus_PInvoke(@this, out __returnBuffer);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??HPxMat44@physx@@QEBA?BV01@AEBV01@@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_Plus_PInvoke(PxMat44* @this, out PxMat44 __returnBuffer, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44 operator_Plus(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            {
                PxMat44 __returnBuffer;
                operator_Plus_PInvoke(@this, out __returnBuffer, other);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??GPxMat44@physx@@QEBA?BV01@AEBV01@@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_Minus_PInvoke(PxMat44* @this, out PxMat44 __returnBuffer, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44 operator_Minus(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            {
                PxMat44 __returnBuffer;
                operator_Minus_PInvoke(@this, out __returnBuffer, other);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??DPxMat44@physx@@QEBA?BV01@M@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_Star_PInvoke(PxMat44* @this, out PxMat44 __returnBuffer, float scalar);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44 operator_Star(float scalar)
        {
            fixed (PxMat44* @this = &this)
            {
                PxMat44 __returnBuffer;
                operator_Star_PInvoke(@this, out __returnBuffer, scalar);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??DPxMat44@physx@@QEBA?BV01@AEBV01@@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_Star_PInvoke(PxMat44* @this, out PxMat44 __returnBuffer, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44 operator_Star(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            {
                PxMat44 __returnBuffer;
                operator_Star_PInvoke(@this, out __returnBuffer, other);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??YPxMat44@physx@@QEAAAEAV01@AEBV01@@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_PlusEqual_PInvoke(PxMat44* @this, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44* operator_PlusEqual(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            { return operator_PlusEqual_PInvoke(@this, other); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??ZPxMat44@physx@@QEAAAEAV01@AEBV01@@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_MinusEqual_PInvoke(PxMat44* @this, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44* operator_MinusEqual(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            { return operator_MinusEqual_PInvoke(@this, other); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??XPxMat44@physx@@QEAAAEAV01@M@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_StarEqual_PInvoke(PxMat44* @this, float scalar);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44* operator_StarEqual(float scalar)
        {
            fixed (PxMat44* @this = &this)
            { return operator_StarEqual_PInvoke(@this, scalar); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??XPxMat44@physx@@QEAAAEAV01@AEBV01@@Z", ExactSpelling = true)]
        private static extern PxMat44* operator_StarEqual_PInvoke(PxMat44* @this, PxMat44* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44* operator_StarEqual(PxMat44* other)
        {
            fixed (PxMat44* @this = &this)
            { return operator_StarEqual_PInvoke(@this, other); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??RPxMat44@physx@@QEBAMII@Z", ExactSpelling = true)]
        private static extern float operator_Call_Const_PInvoke(PxMat44* @this, uint row, uint col);

        [EditorBrowsable(EditorBrowsableState.Never)]
        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float operator_Call_Const(uint row, uint col)
        {
            fixed (PxMat44* @this = &this)
            { return operator_Call_Const_PInvoke(@this, row, col); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??RPxMat44@physx@@QEAAAEAMII@Z", ExactSpelling = true)]
        private static extern float* operator_Call_PInvoke(PxMat44* @this, uint row, uint col);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float* operator_Call(uint row, uint col)
        {
            fixed (PxMat44* @this = &this)
            { return operator_Call_PInvoke(@this, row, col); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transform@PxMat44@physx@@QEBA?BVPxVec4@2@AEBV32@@Z", ExactSpelling = true)]
        private static extern PxVec4* transform_PInvoke(PxMat44* @this, out PxVec4 __returnBuffer, PxVec4* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec4 transform(PxVec4* other)
        {
            fixed (PxMat44* @this = &this)
            {
                PxVec4 __returnBuffer;
                transform_PInvoke(@this, out __returnBuffer, other);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?transform@PxMat44@physx@@QEBA?BVPxVec3@2@AEBV32@@Z", ExactSpelling = true)]
        private static extern PxVec3* transform_PInvoke(PxMat44* @this, out PxVec3 __returnBuffer, PxVec3* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3 transform(PxVec3* other)
        {
            fixed (PxMat44* @this = &this)
            {
                PxVec3 __returnBuffer;
                transform_PInvoke(@this, out __returnBuffer, other);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?rotate@PxMat44@physx@@QEBA?BVPxVec4@2@AEBV32@@Z", ExactSpelling = true)]
        private static extern PxVec4* rotate_PInvoke(PxMat44* @this, out PxVec4 __returnBuffer, PxVec4* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec4 rotate(PxVec4* other)
        {
            fixed (PxMat44* @this = &this)
            {
                PxVec4 __returnBuffer;
                rotate_PInvoke(@this, out __returnBuffer, other);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?rotate@PxMat44@physx@@QEBA?BVPxVec3@2@AEBV32@@Z", ExactSpelling = true)]
        private static extern PxVec3* rotate_PInvoke(PxMat44* @this, out PxVec3 __returnBuffer, PxVec3* other);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3 rotate(PxVec3* other)
        {
            fixed (PxMat44* @this = &this)
            {
                PxVec3 __returnBuffer;
                rotate_PInvoke(@this, out __returnBuffer, other);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getBasis@PxMat44@physx@@QEBA?BVPxVec3@2@H@Z", ExactSpelling = true)]
        private static extern PxVec3* getBasis_PInvoke(PxMat44* @this, out PxVec3 __returnBuffer, int num);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3 getBasis(int num)
        {
            fixed (PxMat44* @this = &this)
            {
                PxVec3 __returnBuffer;
                getBasis_PInvoke(@this, out __returnBuffer, num);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getPosition@PxMat44@physx@@QEBA?BVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getPosition_PInvoke(PxMat44* @this, out PxVec3 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3 getPosition()
        {
            fixed (PxMat44* @this = &this)
            {
                PxVec3 __returnBuffer;
                getPosition_PInvoke(@this, out __returnBuffer);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setPosition@PxMat44@physx@@QEAAXAEBVPxVec3@2@@Z", ExactSpelling = true)]
        private static extern void setPosition_PInvoke(PxMat44* @this, PxVec3* position);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setPosition(PxVec3* position)
        {
            fixed (PxMat44* @this = &this)
            { setPosition_PInvoke(@this, position); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?front@PxMat44@physx@@QEBAPEBMXZ", ExactSpelling = true)]
        private static extern float* front_PInvoke(PxMat44* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float* front()
        {
            fixed (PxMat44* @this = &this)
            { return front_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??APxMat44@physx@@QEAAAEAVPxVec4@1@I@Z", ExactSpelling = true)]
        private static extern PxVec4* operator_Subscript_PInvoke(PxMat44* @this, uint num);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec4* operator_Subscript(uint num)
        {
            fixed (PxMat44* @this = &this)
            { return operator_Subscript_PInvoke(@this, num); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??APxMat44@physx@@QEBAAEBVPxVec4@1@I@Z", ExactSpelling = true)]
        private static extern PxVec4* operator_Subscript_Const_PInvoke(PxMat44* @this, uint num);

        [EditorBrowsable(EditorBrowsableState.Never)]
        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec4* operator_Subscript_Const(uint num)
        {
            fixed (PxMat44* @this = &this)
            { return operator_Subscript_Const_PInvoke(@this, num); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?scale@PxMat44@physx@@QEAAXAEBVPxVec4@2@@Z", ExactSpelling = true)]
        private static extern void scale_PInvoke(PxMat44* @this, PxVec4* p);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void scale(PxVec4* p)
        {
            fixed (PxMat44* @this = &this)
            { scale_PInvoke(@this, p); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?inverseRT@PxMat44@physx@@QEBA?BV12@XZ", ExactSpelling = true)]
        private static extern PxMat44* inverseRT_PInvoke(PxMat44* @this, out PxMat44 __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxMat44 inverseRT()
        {
            fixed (PxMat44* @this = &this)
            {
                PxMat44 __returnBuffer;
                inverseRT_PInvoke(@this, out __returnBuffer);
                return __returnBuffer;
            }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?isFinite@PxMat44@physx@@QEBA_NXZ", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool isFinite_PInvoke(PxMat44* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool isFinite()
        {
            fixed (PxMat44* @this = &this)
            { return isFinite_PInvoke(@this); }
        }

        [FieldOffset(0)] public PxVec4 column0;

        [FieldOffset(16)] public PxVec4 column1;

        [FieldOffset(32)] public PxVec4 column2;

        [FieldOffset(48)] public PxVec4 column3;
    }
}
