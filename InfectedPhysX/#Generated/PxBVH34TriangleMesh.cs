// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Infrastructure;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe partial struct PxBVH34TriangleMesh
    {
        [FieldOffset(0)] public PxTriangleMesh Base;

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `release`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, void> release;
            /// <summary>Virtual method pointer for `getConcreteTypeName`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, byte*> getConcreteTypeName;
            /// <summary>Virtual method pointer for `isReleasable`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, NativeBoolean> isReleasable;
            /// <summary>Virtual method pointer for `~PxBVH34TriangleMesh`</summary>
            public void* __DeletingDestructorPointer;
            /// <summary>Virtual method pointer for `isKindOf`</summary>
            public void* isKindOf;
            /// <summary>Virtual method pointer for `getNbVertices`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, uint> getNbVertices;
            /// <summary>Virtual method pointer for `getVertices`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, PxVec3*> getVertices;
            /// <summary>Virtual method pointer for `getVerticesForModification`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, PxVec3*> getVerticesForModification;
            /// <summary>Virtual method pointer for `refitBVH`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, PxBounds3*, PxBounds3*> refitBVH;
            /// <summary>Virtual method pointer for `getNbTriangles`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, uint> getNbTriangles;
            /// <summary>Virtual method pointer for `getTriangles`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, void*> getTriangles;
            /// <summary>Virtual method pointer for `getTriangleMeshFlags`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, PxTriangleMeshFlags*, PxTriangleMeshFlags*> getTriangleMeshFlags;
            /// <summary>Virtual method pointer for `getTrianglesRemap`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, uint*> getTrianglesRemap;
            /// <summary>Virtual method pointer for `getTriangleMaterialIndex`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, uint, ushort> getTriangleMaterialIndex;
            /// <summary>Virtual method pointer for `getLocalBounds`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, PxBounds3*, PxBounds3*> getLocalBounds;
            /// <summary>Virtual method pointer for `getReferenceCount`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, uint> getReferenceCount;
            /// <summary>Virtual method pointer for `acquireReference`</summary>
            public delegate* unmanaged[Cdecl]<PxBVH34TriangleMesh*, void> acquireReference;
        }
    }
}
