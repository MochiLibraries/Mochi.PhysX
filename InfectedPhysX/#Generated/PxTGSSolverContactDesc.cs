// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Gu;
using Mochi.PhysX.Sc;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 240)]
    public unsafe partial struct PxTGSSolverContactDesc
    {
        [FieldOffset(0)] public PxTGSSolverConstraintPrepDescBase Base;

        [FieldOffset(144)] public ShapeInteraction* shapeInteraction;

        [FieldOffset(152)] public ContactPoint* contacts;

        [FieldOffset(160)] public uint numContacts;

        [FieldOffset(164)] [MarshalAs(UnmanagedType.I1)] public bool hasMaxImpulse;

        [FieldOffset(165)] [MarshalAs(UnmanagedType.I1)] public bool disableStrongFriction;

        [FieldOffset(166)] [MarshalAs(UnmanagedType.I1)] public bool hasForceThresholds;

        [FieldOffset(168)] public float restDistance;

        [FieldOffset(172)] public float maxCCDSeparation;

        [FieldOffset(176)] public byte* frictionPtr;

        [FieldOffset(184)] public byte frictionCount;

        [FieldOffset(192)] public float* contactForces;

        [FieldOffset(200)] public uint startFrictionPatchIndex;

        [FieldOffset(204)] public uint numFrictionPatches;

        [FieldOffset(208)] public uint startContactPatchIndex;

        [FieldOffset(212)] public ushort numContactPatches;

        [FieldOffset(214)] public ushort axisConstraintCount;

        [FieldOffset(216)] public float maxImpulse;

        [FieldOffset(220)] public float torsionalPatchRadius;

        [FieldOffset(224)] public float minTorsionalPatchRadius;
    }
}
