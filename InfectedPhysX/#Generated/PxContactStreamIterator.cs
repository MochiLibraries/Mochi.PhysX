// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 80)]
    public unsafe partial struct PxContactStreamIterator
    {
        public enum StreamFormat
        {
            eSIMPLE_STREAM,
            eMODIFIABLE_STREAM,
            eCOMPRESSED_MODIFIABLE_STREAM
        }

        [FieldOffset(0)] public PxVec3 zero;

        [FieldOffset(16)] public PxContactPatch* patch;

        [FieldOffset(24)] public PxContact* contact;

        [FieldOffset(32)] public uint* faceIndice;

        [FieldOffset(40)] public uint totalPatches;

        [FieldOffset(44)] public uint totalContacts;

        [FieldOffset(48)] public uint nextContactIndex;

        [FieldOffset(52)] public uint nextPatchIndex;

        [FieldOffset(56)] public uint contactPatchHeaderSize;

        [FieldOffset(60)] public uint contactPointSize;

        [FieldOffset(64)] public StreamFormat mStreamFormat;

        [FieldOffset(68)] public uint forceNoResponse;

        [FieldOffset(72)] [MarshalAs(UnmanagedType.I1)] public bool pointStepped;

        [FieldOffset(76)] public uint hasFaceIndices;

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper36", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxContactStreamIterator* @this, byte* contactPatches, byte* contactPoints, uint* contactFaceIndices, uint nbPatches, uint nbContacts);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(byte* contactPatches, byte* contactPoints, uint* contactFaceIndices, uint nbPatches, uint nbContacts)
        {
            fixed (PxContactStreamIterator* @this = &this)
            { Constructor_PInvoke(@this, contactPatches, contactPoints, contactFaceIndices, nbPatches, nbContacts); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?hasNextPatch@PxContactStreamIterator@physx@@QEBA_NXZ", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool hasNextPatch_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool hasNextPatch()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return hasNextPatch_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getTotalContactCount@PxContactStreamIterator@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getTotalContactCount_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getTotalContactCount()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getTotalContactCount_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getTotalPatchCount@PxContactStreamIterator@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getTotalPatchCount_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getTotalPatchCount()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getTotalPatchCount_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?nextPatch@PxContactStreamIterator@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void nextPatch_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void nextPatch()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { nextPatch_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?hasNextContact@PxContactStreamIterator@physx@@QEBA_NXZ", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool hasNextContact_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool hasNextContact()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return hasNextContact_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?nextContact@PxContactStreamIterator@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void nextContact_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void nextContact()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { nextContact_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getContactNormal@PxContactStreamIterator@physx@@QEBAAEBVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getContactNormal_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3* getContactNormal()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getContactNormal_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getInvMassScale0@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getInvMassScale0_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getInvMassScale0()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getInvMassScale0_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getInvMassScale1@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getInvMassScale1_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getInvMassScale1()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getInvMassScale1_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getInvInertiaScale0@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getInvInertiaScale0_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getInvInertiaScale0()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getInvInertiaScale0_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getInvInertiaScale1@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getInvInertiaScale1_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getInvInertiaScale1()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getInvInertiaScale1_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getMaxImpulse@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getMaxImpulse_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getMaxImpulse()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getMaxImpulse_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getTargetVel@PxContactStreamIterator@physx@@QEBAAEBVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getTargetVel_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3* getTargetVel()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getTargetVel_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getContactPoint@PxContactStreamIterator@physx@@QEBAAEBVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getContactPoint_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3* getContactPoint()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getContactPoint_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getSeparation@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getSeparation_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getSeparation()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getSeparation_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getFaceIndex0@PxContactStreamIterator@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getFaceIndex0_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getFaceIndex0()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getFaceIndex0_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getFaceIndex1@PxContactStreamIterator@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getFaceIndex1_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getFaceIndex1()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getFaceIndex1_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getStaticFriction@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getStaticFriction_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getStaticFriction()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getStaticFriction_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getDynamicFriction@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getDynamicFriction_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getDynamicFriction()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getDynamicFriction_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getRestitution@PxContactStreamIterator@physx@@QEBAMXZ", ExactSpelling = true)]
        private static extern float getRestitution_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getRestitution()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getRestitution_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getMaterialFlags@PxContactStreamIterator@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getMaterialFlags_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getMaterialFlags()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getMaterialFlags_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getMaterialIndex0@PxContactStreamIterator@physx@@QEBAGXZ", ExactSpelling = true)]
        private static extern ushort getMaterialIndex0_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ushort getMaterialIndex0()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getMaterialIndex0_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getMaterialIndex1@PxContactStreamIterator@physx@@QEBAGXZ", ExactSpelling = true)]
        private static extern ushort getMaterialIndex1_PInvoke(PxContactStreamIterator* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ushort getMaterialIndex1()
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return getMaterialIndex1_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?advanceToIndex@PxContactStreamIterator@physx@@QEAA_NI@Z", ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.I1)]
        private static extern bool advanceToIndex_PInvoke(PxContactStreamIterator* @this, uint initialIndex);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool advanceToIndex(uint initialIndex)
        {
            fixed (PxContactStreamIterator* @this = &this)
            { return advanceToIndex_PInvoke(@this, initialIndex); }
        }
    }
}
