// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public unsafe partial struct PxDefaultErrorCallback
    {
        [FieldOffset(0)] public PxErrorCallback Base;

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0PxDefaultErrorCallback@physx@@QEAA@XZ", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxDefaultErrorCallback* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxDefaultErrorCallback()
        {
            fixed (PxDefaultErrorCallback* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Destructor()
        {
            fixed (PxDefaultErrorCallback* @this = &this)
            { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void reportError(PxErrorCode code, byte* message, byte* file, int line)
        {
            fixed (PxDefaultErrorCallback* @this = &this)
            { VirtualMethodTablePointer->reportError(@this, code, message, file, line); }
        }

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `~PxDefaultErrorCallback`</summary>
            public delegate* unmanaged[Cdecl]<PxDefaultErrorCallback*, void> __DeletingDestructorPointer;
            /// <summary>Virtual method pointer for `reportError`</summary>
            public delegate* unmanaged[Cdecl]<PxDefaultErrorCallback*, PxErrorCode, byte*, byte*, int, void> reportError;
        }
    }
}
