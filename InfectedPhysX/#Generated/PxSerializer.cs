// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public unsafe partial struct PxSerializer
    {
        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public byte* getConcreteTypeName()
        {
            fixed (PxSerializer* @this = &this)
            { return VirtualMethodTablePointer->getConcreteTypeName(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void requiresObjects(PxBase* arg0, PxProcessPxBaseCallback* arg1)
        {
            fixed (PxSerializer* @this = &this)
            { VirtualMethodTablePointer->requiresObjects(@this, arg0, arg1); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool isSubordinate()
        {
            fixed (PxSerializer* @this = &this)
            { return VirtualMethodTablePointer->isSubordinate(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void exportExtraData(PxBase* arg0, PxSerializationContext* arg1)
        {
            fixed (PxSerializer* @this = &this)
            { VirtualMethodTablePointer->exportExtraData(@this, arg0, arg1); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void exportData(PxBase* arg0, PxSerializationContext* arg1)
        {
            fixed (PxSerializer* @this = &this)
            { VirtualMethodTablePointer->exportData(@this, arg0, arg1); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void registerReferences(PxBase* obj, PxSerializationContext* s)
        {
            fixed (PxSerializer* @this = &this)
            { VirtualMethodTablePointer->registerReferences(@this, obj, s); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ulong getClassSize()
        {
            fixed (PxSerializer* @this = &this)
            { return VirtualMethodTablePointer->getClassSize(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxBase* createObject(byte** address, PxDeserializationContext* context)
        {
            fixed (PxSerializer* @this = &this)
            { return VirtualMethodTablePointer->createObject(@this, address, context); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Destructor()
        {
            fixed (PxSerializer* @this = &this)
            { VirtualMethodTablePointer->__DeletingDestructorPointer(@this); }
        }

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `getConcreteTypeName`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, byte*> getConcreteTypeName;
            /// <summary>Virtual method pointer for `requiresObjects`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, PxBase*, PxProcessPxBaseCallback*, void> requiresObjects;
            /// <summary>Virtual method pointer for `isSubordinate`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, NativeBoolean> isSubordinate;
            /// <summary>Virtual method pointer for `exportExtraData`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, PxBase*, PxSerializationContext*, void> exportExtraData;
            /// <summary>Virtual method pointer for `exportData`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, PxBase*, PxSerializationContext*, void> exportData;
            /// <summary>Virtual method pointer for `registerReferences`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, PxBase*, PxSerializationContext*, void> registerReferences;
            /// <summary>Virtual method pointer for `getClassSize`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, ulong> getClassSize;
            /// <summary>Virtual method pointer for `createObject`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, byte**, PxDeserializationContext*, PxBase*> createObject;
            /// <summary>Virtual method pointer for `~PxSerializer`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializer*, void> __DeletingDestructorPointer;
        }
    }
}
