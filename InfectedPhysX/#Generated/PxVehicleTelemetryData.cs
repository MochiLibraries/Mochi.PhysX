// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 48)]
    public unsafe partial struct PxVehicleTelemetryData
    {
        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?allocate@PxVehicleTelemetryData@physx@@SAPEAV12@I@Z", ExactSpelling = true)]
        public static extern PxVehicleTelemetryData* allocate(uint nbWheels);

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?free@PxVehicleTelemetryData@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void free_PInvoke(PxVehicleTelemetryData* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void free()
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { free_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setup@PxVehicleTelemetryData@physx@@QEAAXMMMMQEBM0AEBVPxVec3@2@11@Z", ExactSpelling = true)]
        private static extern void setup_PInvoke(PxVehicleTelemetryData* @this, float graphSizeX, float graphSizeY, float engineGraphPosX, float engineGraphPosY, float* wheelGraphPosX, float* wheelGraphPosY, PxVec3* backGroundColor, PxVec3* lineColorHigh, PxVec3* lineColorLow);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setup(float graphSizeX, float graphSizeY, float engineGraphPosX, float engineGraphPosY, float* wheelGraphPosX, float* wheelGraphPosY, PxVec3* backGroundColor, PxVec3* lineColorHigh, PxVec3* lineColorLow)
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { setup_PInvoke(@this, graphSizeX, graphSizeY, engineGraphPosX, engineGraphPosY, wheelGraphPosX, wheelGraphPosY, backGroundColor, lineColorHigh, lineColorLow); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?clear@PxVehicleTelemetryData@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void clear_PInvoke(PxVehicleTelemetryData* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void clear()
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { clear_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getEngineGraph@PxVehicleTelemetryData@physx@@QEBAAEBVPxVehicleGraph@2@XZ", ExactSpelling = true)]
        private static extern PxVehicleGraph* getEngineGraph_PInvoke(PxVehicleTelemetryData* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVehicleGraph* getEngineGraph()
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { return getEngineGraph_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNbWheelGraphs@PxVehicleTelemetryData@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getNbWheelGraphs_PInvoke(PxVehicleTelemetryData* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getNbWheelGraphs()
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { return getNbWheelGraphs_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getWheelGraph@PxVehicleTelemetryData@physx@@QEBAAEBVPxVehicleGraph@2@I@Z", ExactSpelling = true)]
        private static extern PxVehicleGraph* getWheelGraph_PInvoke(PxVehicleTelemetryData* @this, uint k);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVehicleGraph* getWheelGraph(uint k)
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { return getWheelGraph_PInvoke(@this, k); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getTireforceAppPoints@PxVehicleTelemetryData@physx@@QEBAPEBVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getTireforceAppPoints_PInvoke(PxVehicleTelemetryData* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3* getTireforceAppPoints()
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { return getTireforceAppPoints_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getSuspforceAppPoints@PxVehicleTelemetryData@physx@@QEBAPEBVPxVec3@2@XZ", ExactSpelling = true)]
        private static extern PxVec3* getSuspforceAppPoints_PInvoke(PxVehicleTelemetryData* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxVec3* getSuspforceAppPoints()
        {
            fixed (PxVehicleTelemetryData* @this = &this)
            { return getSuspforceAppPoints_PInvoke(@this); }
        }

        [FieldOffset(0)] public PxVehicleGraph* mEngineGraph;

        [FieldOffset(8)] public PxVehicleGraph* mWheelGraphs;

        [FieldOffset(16)] public PxVec3* mTireforceAppPoints;

        [FieldOffset(24)] public PxVec3* mSuspforceAppPoints;

        [FieldOffset(32)] public uint mNbActiveWheels;

        [FieldOffset(36)] public ConstantArray_physx__UNICODE_003A____UNICODE_003A__PxU32_3 mPad;
    }
}
