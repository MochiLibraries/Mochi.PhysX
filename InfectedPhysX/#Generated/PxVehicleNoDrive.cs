// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.PhysX.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 224)]
    public unsafe partial struct PxVehicleNoDrive
    {
        [FieldOffset(0)] public PxVehicleWheels Base;

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?allocate@PxVehicleNoDrive@physx@@SAPEAV12@I@Z", ExactSpelling = true)]
        public static extern PxVehicleNoDrive* allocate(uint nbWheels);

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?free@PxVehicleNoDrive@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void free_PInvoke(PxVehicleNoDrive* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void free()
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { free_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setup@PxVehicleNoDrive@physx@@QEAAXPEAVPxPhysics@2@PEAVPxRigidDynamic@2@AEBVPxVehicleWheelsSimData@2@@Z", ExactSpelling = true)]
        private static extern void setup_PInvoke(PxVehicleNoDrive* @this, PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setup(PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { setup_PInvoke(@this, physics, vehActor, wheelsData); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?create@PxVehicleNoDrive@physx@@SAPEAV12@PEAVPxPhysics@2@PEAVPxRigidDynamic@2@AEBVPxVehicleWheelsSimData@2@@Z", ExactSpelling = true)]
        public static extern PxVehicleNoDrive* create(PxPhysics* physics, PxRigidDynamic* vehActor, PxVehicleWheelsSimData* wheelsData);

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setToRestState@PxVehicleNoDrive@physx@@QEAAXXZ", ExactSpelling = true)]
        private static extern void setToRestState_PInvoke(PxVehicleNoDrive* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setToRestState()
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { setToRestState_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setBrakeTorque@PxVehicleNoDrive@physx@@QEAAXIM@Z", ExactSpelling = true)]
        private static extern void setBrakeTorque_PInvoke(PxVehicleNoDrive* @this, uint id, float brakeTorque);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setBrakeTorque(uint id, float brakeTorque)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { setBrakeTorque_PInvoke(@this, id, brakeTorque); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setDriveTorque@PxVehicleNoDrive@physx@@QEAAXIM@Z", ExactSpelling = true)]
        private static extern void setDriveTorque_PInvoke(PxVehicleNoDrive* @this, uint id, float driveTorque);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setDriveTorque(uint id, float driveTorque)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { setDriveTorque_PInvoke(@this, id, driveTorque); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?setSteerAngle@PxVehicleNoDrive@physx@@QEAAXIM@Z", ExactSpelling = true)]
        private static extern void setSteerAngle_PInvoke(PxVehicleNoDrive* @this, uint id, float steerAngle);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void setSteerAngle(uint id, float steerAngle)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { setSteerAngle_PInvoke(@this, id, steerAngle); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getBrakeTorque@PxVehicleNoDrive@physx@@QEBAMI@Z", ExactSpelling = true)]
        private static extern float getBrakeTorque_PInvoke(PxVehicleNoDrive* @this, uint id);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getBrakeTorque(uint id)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return getBrakeTorque_PInvoke(@this, id); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getDriveTorque@PxVehicleNoDrive@physx@@QEBAMI@Z", ExactSpelling = true)]
        private static extern float getDriveTorque_PInvoke(PxVehicleNoDrive* @this, uint id);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getDriveTorque(uint id)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return getDriveTorque_PInvoke(@this, id); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getSteerAngle@PxVehicleNoDrive@physx@@QEBAMI@Z", ExactSpelling = true)]
        private static extern float getSteerAngle_PInvoke(PxVehicleNoDrive* @this, uint id);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public float getSteerAngle(uint id)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return getSteerAngle_PInvoke(@this, id); }
        }

        [FieldOffset(192)] public float* mSteerAngles;

        [FieldOffset(200)] public float* mDriveTorques;

        [FieldOffset(208)] public float* mBrakeTorques;

        [FieldOffset(216)] public ConstantArray_physx__UNICODE_003A____UNICODE_003A__PxU32_2 mPad;

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper231", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(PxVehicleNoDrive* @this, PxBaseFlags* baseFlags);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Constructor(PxBaseFlags* baseFlags)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { Constructor_PInvoke(@this, baseFlags); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void exportExtraData(PxSerializationContext* arg0)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { VirtualMethodTablePointer->exportExtraData(@this, arg0); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?importExtraData@PxVehicleNoDrive@physx@@QEAAXAEAVPxDeserializationContext@2@@Z", ExactSpelling = true)]
        private static extern void importExtraData_PInvoke(PxVehicleNoDrive* @this, PxDeserializationContext* arg0);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void importExtraData(PxDeserializationContext* arg0)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { importExtraData_PInvoke(@this, arg0); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?createObject@PxVehicleNoDrive@physx@@SAPEAV12@AEAPEAEAEAVPxDeserializationContext@2@@Z", ExactSpelling = true)]
        public static extern PxVehicleNoDrive* createObject(byte** address, PxDeserializationContext* context);

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getBinaryMetaData@PxVehicleNoDrive@physx@@SAXAEAVPxOutputStream@2@@Z", ExactSpelling = true)]
        public static extern void getBinaryMetaData(PxOutputStream* stream);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public byte* getConcreteTypeName()
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return VirtualMethodTablePointer->getConcreteTypeName(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool isKindOf(byte* name)
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return VirtualMethodTablePointer->isKindOf(@this, name); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNbSteerAngle@PxVehicleNoDrive@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getNbSteerAngle_PInvoke(PxVehicleNoDrive* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getNbSteerAngle()
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return getNbSteerAngle_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNbDriveTorque@PxVehicleNoDrive@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getNbDriveTorque_PInvoke(PxVehicleNoDrive* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getNbDriveTorque()
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return getNbDriveTorque_PInvoke(@this); }
        }

        [DllImport("Mochi.PhysX.Native.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?getNbBrakeTorque@PxVehicleNoDrive@physx@@QEBAIXZ", ExactSpelling = true)]
        private static extern uint getNbBrakeTorque_PInvoke(PxVehicleNoDrive* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public uint getNbBrakeTorque()
        {
            fixed (PxVehicleNoDrive* @this = &this)
            { return getNbBrakeTorque_PInvoke(@this); }
        }

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `release`</summary>
            public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, void> release;
            /// <summary>Virtual method pointer for `getConcreteTypeName`</summary>
            public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, byte*> getConcreteTypeName;
            /// <summary>Virtual method pointer for `isReleasable`</summary>
            public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, NativeBoolean> isReleasable;
            /// <summary>Virtual method pointer for `~PxVehicleNoDrive`</summary>
            public void* __DeletingDestructorPointer;
            /// <summary>Virtual method pointer for `isKindOf`</summary>
            public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, byte*, NativeBoolean> isKindOf;
            /// <summary>Virtual method pointer for `init`</summary>
            public void* init;
            /// <summary>Virtual method pointer for `requiresObjects`</summary>
            public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, PxProcessPxBaseCallback*, void> requiresObjects;
            /// <summary>Virtual method pointer for `preExportDataReset`</summary>
            public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, void> preExportDataReset;
            /// <summary>Virtual method pointer for `exportExtraData`</summary>
            public delegate* unmanaged[Cdecl]<PxVehicleNoDrive*, PxSerializationContext*, void> exportExtraData;
        }
    }
}
