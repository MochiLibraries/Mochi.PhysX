// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.PhysX
{
    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public unsafe partial struct PxSerializationContext
    {
        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void registerReference(PxBase* @base, uint kind, ulong reference)
        {
            fixed (PxSerializationContext* @this = &this)
            { VirtualMethodTablePointer->registerReference(@this, @base, kind, reference); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public PxCollection* getCollection()
        {
            fixed (PxSerializationContext* @this = &this)
            { return VirtualMethodTablePointer->getCollection(@this); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void writeData(void* data, uint size)
        {
            fixed (PxSerializationContext* @this = &this)
            { VirtualMethodTablePointer->writeData(@this, data, size); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void alignData(uint alignment = 16)
        {
            fixed (PxSerializationContext* @this = &this)
            { VirtualMethodTablePointer->alignData(@this, alignment); }
        }

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void writeName(byte* name)
        {
            fixed (PxSerializationContext* @this = &this)
            { VirtualMethodTablePointer->writeName(@this, name); }
        }

        [FieldOffset(0)] public VirtualMethodTable* VirtualMethodTablePointer;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe struct VirtualMethodTable
        {
            /// <summary>Virtual method pointer for `registerReference`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializationContext*, PxBase*, uint, ulong, void> registerReference;
            /// <summary>Virtual method pointer for `getCollection`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializationContext*, PxCollection*> getCollection;
            /// <summary>Virtual method pointer for `writeData`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializationContext*, void*, uint, void> writeData;
            /// <summary>Virtual method pointer for `alignData`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializationContext*, uint, void> alignData;
            /// <summary>Virtual method pointer for `writeName`</summary>
            public delegate* unmanaged[Cdecl]<PxSerializationContext*, byte*, void> writeName;
            /// <summary>Virtual method pointer for `~PxSerializationContext`</summary>
            public void* __DeletingDestructorPointer;
        }
    }
}
